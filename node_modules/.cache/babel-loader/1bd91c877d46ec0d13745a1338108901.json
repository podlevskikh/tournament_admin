{"ast":null,"code":"var _jsxFileName = \"/Users/podlevskikh/go/src/podlevskikh/volleymsk_admin/tournament_admin/src/App.tsx\";\nimport './App.css';\nimport * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { stringify } from 'query-string';\nimport { fetchUtils } from 'ra-core';\nimport { TournamentList } from './pages/Tournaments';\nimport { SeasonList } from './pages/Seasons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataProvider = jsonServerProvider('http://localhost:8080/api');\n\ndataProvider.getList = (resource, params) => {\n  const {\n    page,\n    perPage\n  } = params.pagination;\n  const {\n    field,\n    order\n  } = params.sort;\n  const query = {\n    sort: JSON.stringify([field, order]),\n    range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n    filter: JSON.stringify(params.filter)\n  };\n  const url = `http://localhost:8080/api/${resource}?${stringify(query)}`;\n  return fetchUtils.fetchJson(url).then(_ref => {\n    let {\n      headers,\n      json\n    } = _ref;\n    const jsonData = json.tournaments;\n    const res = {\n      data: jsonData.map(resource => ({ ...resource,\n        id: resource.alias\n      })),\n      total: jsonData.length\n    };\n    console.log(res);\n    return res;\n  });\n};\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: dataProvider,\n    children: [/*#__PURE__*/_jsxDEV(Resource, {\n      name: \"tournaments\",\n      list: TournamentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), \",\", /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"seasons\",\n      list: SeasonList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/podlevskikh/go/src/podlevskikh/volleymsk_admin/tournament_admin/src/App.tsx"],"names":["React","Admin","Resource","jsonServerProvider","stringify","fetchUtils","TournamentList","SeasonList","dataProvider","getList","resource","params","page","perPage","pagination","field","order","sort","query","JSON","range","filter","url","fetchJson","then","headers","json","jsonData","tournaments","res","data","map","id","alias","total","length","console","log","App"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,aAAhC;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SACIC,cADJ,QAEO,qBAFP;AAGA,SACIC,UADJ,QAEO,iBAFP;;AAIA,MAAMC,YAAY,GAAGL,kBAAkB,CAAC,2BAAD,CAAvC;;AAGAK,YAAY,CAACC,OAAb,GAAuB,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAAM,CAACG,UAAjC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBL,MAAM,CAACM,IAAhC;AACA,QAAMC,KAAK,GAAG;AACVD,IAAAA,IAAI,EAAEE,IAAI,CAACf,SAAL,CAAe,CAACW,KAAD,EAAQC,KAAR,CAAf,CADI;AAEVI,IAAAA,KAAK,EAAED,IAAI,CAACf,SAAL,CAAe,CAAC,CAACQ,IAAI,GAAG,CAAR,IAAaC,OAAd,EAAuBD,IAAI,GAAGC,OAAP,GAAiB,CAAxC,CAAf,CAFG;AAGVQ,IAAAA,MAAM,EAAEF,IAAI,CAACf,SAAL,CAAeO,MAAM,CAACU,MAAtB;AAHE,GAAd;AAKA,QAAMC,GAAG,GAAI,6BAA4BZ,QAAS,IAAGN,SAAS,CAACc,KAAD,CAAQ,EAAtE;AAEA,SAAOb,UAAU,CAACkB,SAAX,CAAqBD,GAArB,EAA0BE,IAA1B,CAA+B,QAAuB;AAAA,QAAtB;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAsB;AAEzD,UAAMC,QAAQ,GAAGD,IAAI,CAACE,WAAtB;AACA,UAAMC,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEH,QAAQ,CAACI,GAAT,CAAarB,QAAQ,KAAK,EAAC,GAAGA,QAAJ;AAAcsB,QAAAA,EAAE,EAAEtB,QAAQ,CAACuB;AAA3B,OAAL,CAArB,CADE;AAERC,MAAAA,KAAK,EAAEP,QAAQ,CAACQ;AAFR,KAAZ;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,WAAOA,GAAP;AACH,GATM,CAAP;AAUP,CApBD;;AAuBA,MAAMS,GAAG,GAAG,MAAM;AACd,sBACI,QAAC,KAAD;AAAO,IAAA,YAAY,EAAE9B,YAArB;AAAA,4BACI,QAAC,QAAD;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,IAAI,EAAEF;AAFV;AAAA;AAAA;AAAA;AAAA,YADJ,oBAKI,QAAC,QAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,IAAI,EAAEC;AAFV;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAbD;;KAAM+B,G;AAeN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { stringify } from 'query-string';\nimport { fetchUtils } from 'ra-core';\n\nimport {\n    TournamentList,\n} from './pages/Tournaments';\nimport {\n    SeasonList,\n} from './pages/Seasons';\n\nconst dataProvider = jsonServerProvider('http://localhost:8080/api');\n\n\ndataProvider.getList = (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            sort: JSON.stringify([field, order]),\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n            filter: JSON.stringify(params.filter),\n        };\n        const url = `http://localhost:8080/api/${resource}?${stringify(query)}`;\n\n        return fetchUtils.fetchJson(url).then(({ headers, json }) => {\n\n            const jsonData = json.tournaments;\n            const res = {\n                data: jsonData.map(resource => ({...resource, id: resource.alias})),\n                total: jsonData.length\n            };\n            console.log(res);\n            return res\n        });\n};\n\n\nconst App = () => {\n    return (\n        <Admin dataProvider={dataProvider}>\n            <Resource\n                name=\"tournaments\"\n                list={TournamentList}\n            />,\n            <Resource\n                name=\"seasons\"\n                list={SeasonList}\n            />\n        </Admin>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}