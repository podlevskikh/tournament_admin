{"ast":null,"code":"var _jsxFileName = \"/Users/podlevskikh/go/src/podlevskikh/volleymsk_admin/tournament_admin/src/App.tsx\";\nimport './App.css';\nimport * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { stringify } from 'query-string';\nimport { fetchUtils } from 'ra-core';\nimport { TournamentList } from './pages/Tournaments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataProvider = jsonServerProvider('http://localhost:8080/api');\n\ndataProvider.getList = (resource, params) => {\n  const {\n    page,\n    perPage\n  } = params.pagination;\n  const {\n    field,\n    order\n  } = params.sort;\n  const query = {\n    sort: JSON.stringify([field, order]),\n    range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n    filter: JSON.stringify(params.filter)\n  };\n  const url = `http://localhost:8080/api/${resource}?${stringify(query)}`;\n  return fetchUtils.fetchJson(url).then(_ref => {\n    let {\n      headers,\n      json\n    } = _ref;\n    console.log(json);\n    const jsonData = json.tournaments;\n    console.log(jsonData);\n    const res = {\n      data: jsonData.map(resource => ({ ...resource,\n        id: resource.alais\n      })),\n      total: jsonData.length\n    };\n    console.log(jsonData);\n    return res;\n  });\n};\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Admin, {\n    dataProvider: dataProvider,\n    children: /*#__PURE__*/_jsxDEV(Resource, {\n      name: \"tournaments\",\n      list: TournamentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/podlevskikh/go/src/podlevskikh/volleymsk_admin/tournament_admin/src/App.tsx"],"names":["React","Admin","Resource","jsonServerProvider","stringify","fetchUtils","TournamentList","dataProvider","getList","resource","params","page","perPage","pagination","field","order","sort","query","JSON","range","filter","url","fetchJson","then","headers","json","console","log","jsonData","tournaments","res","data","map","id","alais","total","length","App"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,aAAhC;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SACIC,cADJ,QAEO,qBAFP;;AAIA,MAAMC,YAAY,GAAGJ,kBAAkB,CAAC,2BAAD,CAAvC;;AAGAI,YAAY,CAACC,OAAb,GAAuB,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACrC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAAM,CAACG,UAAjC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBL,MAAM,CAACM,IAAhC;AACA,QAAMC,KAAK,GAAG;AACVD,IAAAA,IAAI,EAAEE,IAAI,CAACd,SAAL,CAAe,CAACU,KAAD,EAAQC,KAAR,CAAf,CADI;AAEVI,IAAAA,KAAK,EAAED,IAAI,CAACd,SAAL,CAAe,CAAC,CAACO,IAAI,GAAG,CAAR,IAAaC,OAAd,EAAuBD,IAAI,GAAGC,OAAP,GAAiB,CAAxC,CAAf,CAFG;AAGVQ,IAAAA,MAAM,EAAEF,IAAI,CAACd,SAAL,CAAeM,MAAM,CAACU,MAAtB;AAHE,GAAd;AAKA,QAAMC,GAAG,GAAI,6BAA4BZ,QAAS,IAAGL,SAAS,CAACa,KAAD,CAAQ,EAAtE;AAEA,SAAOZ,UAAU,CAACiB,SAAX,CAAqBD,GAArB,EAA0BE,IAA1B,CAA+B,QAAuB;AAAA,QAAtB;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAsB;AACrDC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,UAAMG,QAAQ,GAAGH,IAAI,CAACI,WAAtB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAME,GAAG,GAAG;AACRC,MAAAA,IAAI,EAAEH,QAAQ,CAACI,GAAT,CAAavB,QAAQ,KAAK,EAAC,GAAGA,QAAJ;AAAcwB,QAAAA,EAAE,EAAExB,QAAQ,CAACyB;AAA3B,OAAL,CAArB,CADE;AAERC,MAAAA,KAAK,EAAEP,QAAQ,CAACQ;AAFR,KAAZ;AAIAV,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,WAAOE,GAAP;AACH,GAVE,CAAP;AAYP,CAtBD;;AAyBA,MAAMO,GAAG,GAAG,MAAM;AACd,sBACI,QAAC,KAAD;AAAO,IAAA,YAAY,EAAE9B,YAArB;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,IAAI,EAAED;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;KAAM+B,G;AAWN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport * as React from \"react\";\nimport { Admin, Resource } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { stringify } from 'query-string';\nimport { fetchUtils } from 'ra-core';\n\nimport {\n    TournamentList,\n} from './pages/Tournaments';\n\nconst dataProvider = jsonServerProvider('http://localhost:8080/api');\n\n\ndataProvider.getList = (resource, params) => {\n        const { page, perPage } = params.pagination;\n        const { field, order } = params.sort;\n        const query = {\n            sort: JSON.stringify([field, order]),\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n            filter: JSON.stringify(params.filter),\n        };\n        const url = `http://localhost:8080/api/${resource}?${stringify(query)}`;\n\n        return fetchUtils.fetchJson(url).then(({ headers, json }) => {\n                console.log(json);\n                const jsonData = json.tournaments;\n                console.log(jsonData);\n                const res = {\n                    data: jsonData.map(resource => ({...resource, id: resource.alais})),\n                    total: jsonData.length\n                };\n                console.log(jsonData);\n                return res\n            }\n        );\n};\n\n\nconst App = () => {\n    return (\n        <Admin dataProvider={dataProvider}>\n            <Resource\n                name=\"tournaments\"\n                list={TournamentList}\n            />\n        </Admin>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}